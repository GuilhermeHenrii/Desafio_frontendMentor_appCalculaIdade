{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://desafio_frontendmentor_appcalculaidade/./src/main.js"],"sourcesContent":["class Age {\r\n    constructor() {\r\n        this.form = document.querySelector('.form');\r\n        this.button = document.querySelector('.btn-div');\r\n        this.currentDate = new Date().getFullYear();\r\n        this.section = document.querySelectorAll('.dynamic-line');\r\n        this.events();\r\n    };\r\n\r\n    events() {\r\n        this.button.addEventListener('click', e => {\r\n            this.handleClick(e);\r\n        });\r\n    };\r\n\r\n    handleClick(e) {\r\n        const day = this.form.querySelector('#day');\r\n        const month = this.form.querySelector('#month');\r\n        const year = this.form.querySelector('#year');\r\n        this.acceptedDate = new Date(`${year.value}-${month.value}-${day.value}`);//T00:00:00-03:00\r\n\r\n        const fieldEmpty = this.fieldIsEmpty();\r\n        if (!fieldEmpty) return;\r\n\r\n        const dateValid = this.dateBrIsValid();\r\n        if(!dateValid) return;\r\n\r\n        const calculateAge = this.calculateAge(this.acceptedDate);\r\n\r\n        if (calculateAge.some((value) => { //O método some() é uma função de array em JavaScript que verifica se pelo menos um elemento do array satisfaz uma determinada condição. Ele itera sobre os elementos do array e retorna true assim que encontrar o primeiro elemento que atenda à condição especificada. Caso nenhum elemento satisfaça a condição, o método retorna false. Ele para de iterar, assim que encontra o primeiro elemento\r\n            return isNaN(value);\r\n        }) === false) {\r\n            let i = 0;\r\n            for (let date of this.section) {\r\n                //date.remove(); \r\n                date.innerHTML = calculateAge[i];\r\n                i++;\r\n            }\r\n        }\r\n    };\r\n\r\n    fieldIsEmpty() {\r\n        let valid = true;\r\n\r\n        for (let errorTxt of this.form.querySelectorAll('.error-text')) {\r\n            errorTxt.remove();\r\n        }\r\n\r\n        for (let field of this.form.querySelectorAll('.input')) {\r\n            const label = field.previousElementSibling.innerText;\r\n\r\n            if (!field.value) {\r\n                this.createError(field, `Field ${label} empty`);\r\n                valid = false;\r\n            }\r\n\r\n            if (isNaN(Number(field.value))) {\r\n                this.createError(field, `Field ${label.toLowerCase} is not a valid number`);\r\n                valid = false;\r\n            }\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n\r\n    dateBrIsValid() {\r\n        let valid = true;\r\n        const dateBr = this.acceptedDate.toLocaleDateString('pt-br', {\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            timeZone: 'America/Sao_Paulo'\r\n        });\r\n\r\n        let regex = /^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/;\r\n        if (!regex.test(dateBr)) {\r\n            valid = false;\r\n            return this.createError(this.form.querySelector('#day'), 'data invalida'); // não corresponde ao formato dd-mm-aaaa\r\n        };\r\n\r\n        const currentDate = new Date();\r\n\r\n        let dateParts = dateBr.split(\"/\");\r\n        let day = parseInt(dateParts[0]);\r\n        let month = parseInt(dateParts[1]);\r\n        let year = parseInt(dateParts[2]);\r\n\r\n        if (year < 0 || year > currentDate.getFullYear()) {\r\n            valid = false;\r\n            return this.createError(this.form.querySelector('#year'), 'Invalid year field'); // ano deve estar entre 00 e 99\r\n        };\r\n        if (month < 1 || month > 12) {\r\n            valid = false;\r\n            return this.createError(this.form.querySelector('#month'), 'Invalid month field'); // mês deve estar entre 01 e 12\r\n        };\r\n        if (day < 1 || day > 31) {\r\n            valid = false;\r\n            return false; // dia deve estar entre 01 e 31\r\n        };\r\n        if ((month === 4 || month === 6 || month === 9 || month === 11) && day > 30) {\r\n            valid = false;\r\n            return false; // meses com 30 dias\r\n        };\r\n        if (month === 2) {\r\n            let leapYear = year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\r\n            if (leapYear && day > 29 || !leapYear && day > 28) {\r\n                valid = false;\r\n                return false; // fevereiro com 28 ou 29 dias\r\n            };\r\n        };\r\n        return valid;\r\n    };\r\n\r\n    calculateAge(dateOfBirth) {\r\n        //o erro esta nesse método\r\n        //preciso fazer esse calculo de maneira precisa\r\n        //pesquisar sobre no yt\r\n\r\n        const currentDate = new Date();\r\n        const dtBirth = new Date(dateOfBirth);\r\n\r\n        const difference = currentDate - dtBirth;\r\n        const dtAge = difference - new Date('1970-01-01T00:00:00');\r\n\r\n        console.log(new Date(dtAge));\r\n\r\n        const age = {};\r\n        age.year = Math.floor(difference / (1000 * 60 * 60 * 24 * 365.25));\r\n        age.month = Math.floor((difference / (1000 * 60 * 60 * 24 * (365.25/12))));\r\n        age.day = Math.floor((difference % (1000 * 60 * 60 * 24 * (365.25 / 12))) / (1000 * 60 * 60 * 24));\r\n\r\n        // const currentYear = currentDate.getFullYear();\r\n        // const currentMonth = currentDate.getMonth() + 1;\r\n        // const currentDay = currentDate.getDate();\r\n        \r\n        // const yearOfBirth = dateOfBirth.getFullYear();\r\n        // const monthOfBirth = dateOfBirth.getMonth() + 1;\r\n        // const dayOfBirth = dateOfBirth.getDate(); \r\n\r\n        // const absoluteMonth = currentMonth - monthOfBirth;\r\n        // const absoluteDay = currentDay - dayOfBirth;\r\n\r\n        // const results = {\r\n        //     year: currentYear - yearOfBirth,\r\n        //     month: Math.abs(absoluteMonth),\r\n        //     day: Math.abs(absoluteDay)\r\n        // }\r\n        \r\n\r\n        const ageArr = Object.values(age);\r\n        console.log(ageArr);\r\n        return ageArr;\r\n    };\r\n\r\n    createError(field, msg) {\r\n        const div = document.createElement('div');\r\n        div.innerHTML = msg;\r\n        div.classList.add('error-text');\r\n        field.insertAdjacentElement('afterend', div);\r\n    };\r\n}\r\n\r\n\r\nconst userAge = new Age();"],"names":["Age","_classCallCheck","form","document","querySelector","button","currentDate","Date","getFullYear","section","querySelectorAll","events","_createClass","key","value","_this","addEventListener","e","handleClick","day","month","year","acceptedDate","concat","fieldEmpty","fieldIsEmpty","dateValid","dateBrIsValid","calculateAge","some","isNaN","i","_iterator","_createForOfIteratorHelper","_step","s","n","done","date","innerHTML","err","f","valid","_iterator2","_step2","errorTxt","remove","_iterator3","_step3","field","label","previousElementSibling","innerText","createError","Number","toLowerCase","dateBr","toLocaleDateString","timeZone","regex","test","dateParts","split","parseInt","leapYear","dateOfBirth","dtBirth","difference","dtAge","console","log","age","Math","floor","ageArr","Object","values","msg","div","createElement","classList","add","insertAdjacentElement","userAge"],"sourceRoot":""}